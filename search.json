[{"path":[]},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@damurka.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://cancerscreening.damurka.com/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://cancerscreening.damurka.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 cancerscreening authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cancerscreening.damurka.com/articles/screening-coverage.html","id":"cervical-cancer-screening-coverage","dir":"Articles","previous_headings":"","what":"Cervical Cancer Screening Coverage","title":"Screening Coverage","text":"number women screened can obtained get_cervical_screened eligible women can obtained get_cervical_target_population.","code":"# Target population by county target_population <- get_cervical_target_population(2023, level = 'county')  # Population screened during the same period screened <- get_cervical_screened('2023-01-01', level = 'county')  # aggregate the screened  screened <- screened %>%   summarise(screened = sum(value, na.rm = TRUE), .by = county)  # merge with the target and calculate the coverage  screened %>%   right_join(target_population, by = 'county') %>%   mutate(coverage = screened / target)"},{"path":"https://cancerscreening.damurka.com/articles/screening-coverage.html","id":"cbe-coverage","dir":"Articles","previous_headings":"","what":"CBE Coverage","title":"Screening Coverage","text":"number women screened can obtained get_breast_cbe eligible women can obtained get_breast_cbe_target_population.","code":"# Target population by county target_population <- get_breast_cbe_target_population(2023, level = 'county')  # Population screened during the same period screened <- get_breast_cbe('2023-01-01', level = 'county')  # aggregate the screened  screened <- screened %>%   summarise(screened = sum(value, na.rm = TRUE), .by = county)  # merge with the target and calculate the coverage  screened %>%   right_join(target_population, by = 'county') %>%   mutate(coverage = screened / target)"},{"path":"https://cancerscreening.damurka.com/articles/set-your-credentials.html","id":"setting-your-credentials","dir":"Articles","previous_headings":"","what":"Setting your credentials","title":"Set your credentials","text":"Kenya Health Information System (KHIS) comprehensive web-based platform used Kenya data collection, management, analysis healthcare sector. However, need credential access data. cancerscreening make call KHIS without credential provided wrong credential receive unauthorized error KHIS. Preferred method: Provide path JSON file created expected format JSON file Confirm success credential set","code":"khis_cred(config_path = \"/path/to/the/JSON/file.json\") {   \"credentials\": {     \"username\": \"your-khis-username\",     \"password\": \"your-khis-password\"   } } khis_has_cred()"},{"path":"https://cancerscreening.damurka.com/articles/set-your-credentials.html","id":"alternative","dir":"Articles","previous_headings":"Setting your credentials","what":"Alternative","title":"Set your credentials","text":"access JSON file can provide username password directly get username logged users clear password logged users","code":"khis_cred(username = 'your_username', password = 'your_password') khis_username() khis_cred_clear()"},{"path":"https://cancerscreening.damurka.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Kariuki. Author, maintainer, copyright holder.","code":""},{"path":"https://cancerscreening.damurka.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kariuki D (2024). cancerscreening: Streamline Access Cancer Screening Data. R package version 1.0.1,  https://github.com/damurka/cancerscreening, https://cancerscreening.damurka.com.","code":"@Manual{,   title = {cancerscreening: Streamline Access to Cancer Screening Data},   author = {David Kariuki},   year = {2024},   note = {R package version 1.0.1,  https://github.com/damurka/cancerscreening},   url = {https://cancerscreening.damurka.com}, }"},{"path":[]},{"path":"https://cancerscreening.damurka.com/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Streamline Access to Cancer Screening Data","text":"goal cancerscreening provide easy way download cancer screening data Kenya Health Information System (KHIS) using R.","code":""},{"path":"https://cancerscreening.damurka.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Streamline Access to Cancer Screening Data","text":"can install released version cancerscreening CRAN : can install development version Github : Note: package yet available CRAN.","code":"install.packages(\"cancerscreening\") # install.packages(\"devtools\") devtools::install_github('damurka/cancerscreening')"},{"path":[]},{"path":"https://cancerscreening.damurka.com/index.html","id":"load-cancerscreening-package","dir":"","previous_headings":"Usage","what":"Load cancerscreening package","title":"Streamline Access to Cancer Screening Data","text":"","code":"library(\"cancerscreening\")"},{"path":"https://cancerscreening.damurka.com/index.html","id":"package-conventions","dir":"","previous_headings":"Usage","what":"Package conventions","title":"Streamline Access to Cancer Screening Data","text":"function begin prefix get_ followed screening area cervical breast. Auto-completion friend Goal allow download data associated data interest, e.g. get_cervical_screened, get_cervical_positive, get_cervical_treated cancerscreening “pipe-friendly” , infact rexports %>% require use.","code":""},{"path":"https://cancerscreening.damurka.com/index.html","id":"quick-demo","dir":"","previous_headings":"Usage","what":"Quick demo","title":"Streamline Access to Cancer Screening Data","text":"calling function makes API call need credentials KHIS. expected set credential download data. setting credential can invoke function download data API","code":"# Set the credentials using username and password khis_cred(username = 'KHIS username', password = 'KHIS password')  # Set credentials using configuration path khis_cred(config_path = 'path/to/secret.json') # Download the cervical cancer screening data for country cacx_screened <- get_cervical_screened('2022-07-01') #> ℹ Downloading organisation units #> ℹ Downloading category options #> ℹ Downloading data elements head(cacx_screened) #> # A tibble: 6 × 10 #>   period     value kenya category category2      element month  year fiscal_year #>   <date>     <int> <chr> <fct>    <fct>          <fct>   <ord> <dbl> <fct>       #> 1 2022-12-01    29 Kenya <25      Routine Scree… Pap Sm… Dece…  2022 2022/2023   #> 2 2022-11-01    32 Kenya <25      Routine Scree… Pap Sm… Nove…  2022 2022/2023   #> 3 2023-11-01     4 Kenya 25-49    Post-treatmen… Pap Sm… Nove…  2023 2023/2024   #> 4 2022-10-01    46 Kenya <25      Routine Scree… Pap Sm… Octo…  2022 2022/2023   #> 5 2023-10-01     2 Kenya 25-49    Post-treatmen… Pap Sm… Octo…  2023 2023/2024   #> 6 2023-08-01  3304 Kenya <25      <NA>           VIA     Augu…  2023 2023/2024   #> # ℹ 1 more variable: source <fct>"},{"path":"https://cancerscreening.damurka.com/index.html","id":"metadata-reuse","dir":"","previous_headings":"Usage","what":"Metadata reuse","title":"Streamline Access to Cancer Screening Data","text":"need data one function efficient download metadata share among functions shown :","code":"# Download the organisation units organisations <- get_organisation_units_metadata() head(organisations) #> # A tibble: 6 × 10 #>   facility   kenya_id county_id subcounty_id ward_id facility_id ward  subcounty #>   <chr>      <chr>    <chr>     <chr>        <chr>   <chr>       <chr> <chr>     #> 1 10 Engine… HfVjCur… xuFdFy6t… pF6qPMIlHte  DpYpJ6… Vh676wb3d16 Nany… Laikipia… #> 2 12 Engine… HfVjCur… qKzosKQP… YZAZ1a9MIvX  A7a1GZ… gPEGZGkfDWa Kame… Thika To… #> 3 360 Healt… HfVjCur… wsBsC6gj… sr8WEz03EnP  FydnlJ… r96GaeVvrde Kadz… Nyali     #> 4 3Keys Com… HfVjCur… wsBsC6gj… C1hO6wNOgrH  sHr1V6… lR6W5tK8hAq Junda Kisauni   #> 5 3KR Healt… HfVjCur… ob6SxuRc… FBJ9Y11esHS  sJ50zp… CgMmkS9jWI6 Mene… Nakuru E… #> 6 3rd Park … HfVjCur… jkG3zaih… f1T0Ltob8VQ  QhDd2L… a70eeTvT6tG Park… Westlands #> # ℹ 2 more variables: county <chr>, kenya <chr>  # Download category options categories <- get_category_options_metadata() head(categories) #> # A tibble: 6 × 2 #>   category_id category     #>   <chr>       <chr>        #> 1 iJYRsFhxyLb 0-1000cp//ml #> 2 oCgj86VulzL 0-11 months  #> 3 VXA6MsmIx6b 0-11 months  #> 4 Awmk7Vfo6x5 0-11 months  #> 5 C4f3Y9LnsRf 0-11 months  #> 6 NqEtKTNqN3n 0-11 months  # Download data elements  elements <- get_data_elements_metadata() head(elements) #> # A tibble: 6 × 2 #>   element                                                             element_id #>   <chr>                                                               <chr>      #> 1 \"\"                                                                  ioUhQ3uyR… #> 2 \"0000000 INCOME & EXPENDITURE STATEMENT\"                            RvNJvXCx4… #> 3 \"1000000 Income/Revenue\"                                            zo5v2sL2P… #> 4 \"10-14 Year-Old Girls\"                                              dRhugDCan… #> 5 \"10.1 Residential\"                                                  tZ3qTxyRK… #> 6 \"10.1 The facility has a sound fnancial plan that is adequately fu… oYdxcqRWR…  # Download cervical cancer screening data cacx_screened <- get_cervical_screened('2021-07-01',                                        end_date = '2021-12-31',                                        level = 'county',                                        elements = elements,                                        categories = categories,                                        organisations = organisations) head(cacx_screened) #> # A tibble: 6 × 10 #>   period     value county  category category2    element month  year fiscal_year #>   <date>     <int> <chr>   <fct>    <fct>        <fct>   <ord> <dbl> <fct>       #> 1 2021-08-01    25 Makueni 25-49    <NA>         HPV     Augu…  2021 2021/2022   #> 2 2021-10-01    12 Kisii   50+      Initial Scr… Pap Sm… Octo…  2021 2021/2022   #> 3 2021-11-01     8 Kilifi  <25      Initial Scr… VIA     Nove…  2021 2021/2022   #> 4 2021-11-01     9 Kisii   50+      Initial Scr… Pap Sm… Nove…  2021 2021/2022   #> 5 2021-10-01    18 Kilifi  <25      Initial Scr… VIA     Octo…  2021 2021/2022   #> 6 2021-12-01     3 Kisii   50+      Initial Scr… Pap Sm… Dece…  2021 2021/2022   #> # ℹ 1 more variable: source <fct>  # Download cervical cancer screening positives cacx_positive <- get_cervical_positive('2021-07-01',                                        end_date = '2021-12-31',                                        level = 'county',                                        elements = elements,                                        categories = categories,                                        organisations = organisations) head(cacx_positive) #> # A tibble: 6 × 10 #>   period     value county     category category2 element month  year fiscal_year #>   <date>     <int> <chr>      <fct>    <fct>     <fct>   <ord> <dbl> <fct>       #> 1 2021-09-01     1 Kisii      <25      <NA>      Suspic… Sept…  2021 2021/2022   #> 2 2021-12-01     1 Kiambu     50+      Initial … VIA     Dece…  2021 2021/2022   #> 3 2021-10-01     1 Kiambu     <25      <NA>      HPV     Octo…  2021 2021/2022   #> 4 2021-10-01     1 Uasin Gis… 25-49    Initial … VIA     Octo…  2021 2021/2022   #> 5 2021-08-01     2 Kilifi     25-49    Initial … Suspic… Augu…  2021 2021/2022   #> 6 2021-09-01     1 Marsabit   <25      <NA>      HPV     Sept…  2021 2021/2022   #> # ℹ 1 more variable: source <fct>  # Download Breas mammogram screening breast_mammogram <- get_breast_mammogram('2021-07-01',                                           end_date = '2021-12-31',                                          level = 'county',                                          elements = elements,                                          categories = categories,                                          organisations = organisations) head(breast_mammogram) #> # A tibble: 6 × 9 #>   period     value county   category category2 element   month  year fiscal_year #>   <date>     <int> <chr>    <fct>    <fct>     <fct>     <ord> <dbl> <fct>       #> 1 2021-09-01     1 Nairobi  40-55    Abnormal  BIRADS 4  Sept…  2021 2021/2022   #> 2 2021-11-01     1 Laikipia 40-55    Abnormal  BIRADS 6  Nove…  2021 2021/2022   #> 3 2021-10-01     1 Laikipia 35-39    Normal    BIRADS 0… Octo…  2021 2021/2022   #> 4 2021-10-01     3 Mombasa  40-55    Normal    BIRADS 0… Octo…  2021 2021/2022   #> 5 2021-10-01     1 Nairobi  56-74    Normal    BIRADS 0… Octo…  2021 2021/2022   #> 6 2021-10-01     2 Mombasa  40-55    Abnormal  BIRADS 4  Octo…  2021 2021/2022"},{"path":"https://cancerscreening.damurka.com/reference/cancerscreening-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cancerscreening: Streamline Access to Cancer Screening Data — cancerscreening-package","title":"cancerscreening: Streamline Access to Cancer Screening Data — cancerscreening-package","text":"cancerscreening provide easy way download cancer screening data Kenya Health Information System (KHIS) using R. function begin prefix get_ followed screening area cervical breast. Goal allow download data associated data interest, e.g. get_cervical_screened, get_cervical_positive, get_cervical_treated. cancerscreening \"pipe-friendly\" , infact rexports %>% require use. Please see cancerscreening website full documentation: https://cancerscreening.damurka.com/index.html addition function-specific help, several articles indexed : Article index","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/cancerscreening-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cancerscreening: Streamline Access to Cancer Screening Data — cancerscreening-package","text":"Maintainer: David Kariuki hello@damurka.com (ORCID) [copyright holder]","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Analytics Table Data from KHIS — get_analytics","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"get_analytics() fetches data KHIS analytics data tables given period data element(s), without performing aggregation.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"","code":"get_analytics(   element_ids,   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"element_ids vector data element IDs retrieve data. Required. start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"tibble detailed information, including: Geographical identifiers (kenya, county, subcounty, ward, facility, depending level) Reporting period (month, year, fiscal year) Data element names Category options Reported values","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"Retrieves data directly KHIS analytics tables. Supports optional arguments providing organization lists, data elements, categories. Allows specifying KHIS session objects, retry attempts, logging verbosity.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_analytics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Analytics Table Data from KHIS — get_analytics","text":"","code":"# Clinical Breast Examination data elements # XEX93uLsAm2 = CBE Abnormal # cXe64Yk0QMY = CBE Normal element_id = c('cXe64Yk0QMY', 'XEX93uLsAm2')  # Download data from February 2023 to current date data <- get_analytics(element_ids = element_id,                       start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 235 ms: Connection refused data #> function (..., list = character(), package = NULL, lib.loc = NULL,  #>     verbose = getOption(\"verbose\"), envir = .GlobalEnv, overwrite = TRUE)  #> { #>     fileExt <- function(x) { #>         db <- grepl(\"\\\\.[^.]+\\\\.(gz|bz2|xz)$\", x) #>         ans <- sub(\".*\\\\.\", \"\", x) #>         ans[db] <- sub(\".*\\\\.([^.]+\\\\.)(gz|bz2|xz)$\", \"\\\\1\\\\2\",  #>             x[db]) #>         ans #>     } #>     my_read_table <- function(...) { #>         lcc <- Sys.getlocale(\"LC_COLLATE\") #>         on.exit(Sys.setlocale(\"LC_COLLATE\", lcc)) #>         Sys.setlocale(\"LC_COLLATE\", \"C\") #>         read.table(...) #>     } #>     stopifnot(is.character(list)) #>     names <- c(as.character(substitute(list(...))[-1L]), list) #>     if (!is.null(package)) { #>         if (!is.character(package))  #>             stop(\"'package' must be a character vector or NULL\") #>     } #>     paths <- find.package(package, lib.loc, verbose = verbose) #>     if (is.null(lib.loc))  #>         paths <- c(path.package(package, TRUE), if (!length(package)) getwd(),  #>             paths) #>     paths <- unique(normalizePath(paths[file.exists(paths)])) #>     paths <- paths[dir.exists(file.path(paths, \"data\"))] #>     dataExts <- tools:::.make_file_exts(\"data\") #>     if (length(names) == 0L) { #>         db <- matrix(character(), nrow = 0L, ncol = 4L) #>         for (path in paths) { #>             entries <- NULL #>             packageName <- if (file_test(\"-f\", file.path(path,  #>                 \"DESCRIPTION\")))  #>                 basename(path) #>             else \".\" #>             if (file_test(\"-f\", INDEX <- file.path(path, \"Meta\",  #>                 \"data.rds\"))) { #>                 entries <- readRDS(INDEX) #>             } #>             else { #>                 dataDir <- file.path(path, \"data\") #>                 entries <- tools::list_files_with_type(dataDir,  #>                   \"data\") #>                 if (length(entries)) { #>                   entries <- unique(tools::file_path_sans_ext(basename(entries))) #>                   entries <- cbind(entries, \"\") #>                 } #>             } #>             if (NROW(entries)) { #>                 if (is.matrix(entries) && ncol(entries) == 2L)  #>                   db <- rbind(db, cbind(packageName, dirname(path),  #>                     entries)) #>                 else warning(gettextf(\"data index for package %s is invalid and will be ignored\",  #>                   sQuote(packageName)), domain = NA, call. = FALSE) #>             } #>         } #>         colnames(db) <- c(\"Package\", \"LibPath\", \"Item\", \"Title\") #>         footer <- if (missing(package))  #>             paste0(\"Use \", sQuote(paste(\"data(package =\", \".packages(all.available = TRUE))\")),  #>                 \"\\n\", \"to list the data sets in all *available* packages.\") #>         else NULL #>         y <- list(title = \"Data sets\", header = NULL, results = db,  #>             footer = footer) #>         class(y) <- \"packageIQR\" #>         return(y) #>     } #>     paths <- file.path(paths, \"data\") #>     for (name in names) { #>         found <- FALSE #>         for (p in paths) { #>             tmp_env <- if (overwrite)  #>                 envir #>             else new.env() #>             if (file_test(\"-f\", file.path(p, \"Rdata.rds\"))) { #>                 rds <- readRDS(file.path(p, \"Rdata.rds\")) #>                 if (name %in% names(rds)) { #>                   found <- TRUE #>                   if (verbose)  #>                     message(sprintf(\"name=%s:\\t found in Rdata.rds\",  #>                       name), domain = NA) #>                   thispkg <- sub(\".*/([^/]*)/data$\", \"\\\\1\", p) #>                   thispkg <- sub(\"_.*$\", \"\", thispkg) #>                   thispkg <- paste0(\"package:\", thispkg) #>                   objs <- rds[[name]] #>                   lazyLoad(file.path(p, \"Rdata\"), envir = tmp_env,  #>                     filter = function(x) x %in% objs) #>                   break #>                 } #>                 else if (verbose)  #>                   message(sprintf(\"name=%s:\\t NOT found in names() of Rdata.rds, i.e.,\\n\\t%s\\n\",  #>                     name, paste(names(rds), collapse = \",\")),  #>                     domain = NA) #>             } #>             if (file_test(\"-f\", file.path(p, \"Rdata.zip\"))) { #>                 warning(\"zipped data found for package \", sQuote(basename(dirname(p))),  #>                   \".\\nThat is defunct, so please re-install the package.\",  #>                   domain = NA) #>                 if (file_test(\"-f\", fp <- file.path(p, \"filelist\")))  #>                   files <- file.path(p, scan(fp, what = \"\", quiet = TRUE)) #>                 else { #>                   warning(gettextf(\"file 'filelist' is missing for directory %s\",  #>                     sQuote(p)), domain = NA) #>                   next #>                 } #>             } #>             else { #>                 files <- list.files(p, full.names = TRUE) #>             } #>             files <- files[grep(name, files, fixed = TRUE)] #>             if (length(files) > 1L) { #>                 o <- match(fileExt(files), dataExts, nomatch = 100L) #>                 paths0 <- dirname(files) #>                 paths0 <- factor(paths0, levels = unique(paths0)) #>                 files <- files[order(paths0, o)] #>             } #>             if (length(files)) { #>                 for (file in files) { #>                   if (verbose)  #>                     message(\"name=\", name, \":\\t file= ...\", .Platform$file.sep,  #>                       basename(file), \"::\\t\", appendLF = FALSE,  #>                       domain = NA) #>                   ext <- fileExt(file) #>                   if (basename(file) != paste0(name, \".\", ext))  #>                     found <- FALSE #>                   else { #>                     found <- TRUE #>                     zfile <- file #>                     zipname <- file.path(dirname(file), \"Rdata.zip\") #>                     if (file.exists(zipname)) { #>                       Rdatadir <- tempfile(\"Rdata\") #>                       dir.create(Rdatadir, showWarnings = FALSE) #>                       topic <- basename(file) #>                       rc <- .External(C_unzip, zipname, topic,  #>                         Rdatadir, FALSE, TRUE, FALSE, FALSE) #>                       if (rc == 0L)  #>                         zfile <- file.path(Rdatadir, topic) #>                     } #>                     if (zfile != file)  #>                       on.exit(unlink(zfile)) #>                     switch(ext, R = , r = { #>                       library(\"utils\") #>                       sys.source(zfile, chdir = TRUE, envir = tmp_env) #>                     }, RData = , rdata = , rda = load(zfile,  #>                       envir = tmp_env), TXT = , txt = , tab = ,  #>                       tab.gz = , tab.bz2 = , tab.xz = , txt.gz = ,  #>                       txt.bz2 = , txt.xz = assign(name, my_read_table(zfile,  #>                         header = TRUE, as.is = FALSE), envir = tmp_env),  #>                       CSV = , csv = , csv.gz = , csv.bz2 = ,  #>                       csv.xz = assign(name, my_read_table(zfile,  #>                         header = TRUE, sep = \";\", as.is = FALSE),  #>                         envir = tmp_env), found <- FALSE) #>                   } #>                   if (found)  #>                     break #>                 } #>                 if (verbose)  #>                   message(if (!found)  #>                     \"*NOT* \", \"found\", domain = NA) #>             } #>             if (found)  #>                 break #>         } #>         if (!found) { #>             warning(gettextf(\"data set %s not found\", sQuote(name)),  #>                 domain = NA) #>         } #>         else if (!overwrite) { #>             for (o in ls(envir = tmp_env, all.names = TRUE)) { #>                 if (exists(o, envir = envir, inherits = FALSE))  #>                   warning(gettextf(\"an object named %s already exists and will not be overwritten\",  #>                     sQuote(o))) #>                 else assign(o, get(o, envir = tmp_env, inherits = FALSE),  #>                   envir = envir) #>             } #>             rm(tmp_env) #>         } #>     } #>     invisible(names) #> } #> <bytecode: 0x5600871cffc8> #> <environment: namespace:utils>"},{"path":"https://cancerscreening.damurka.com/reference/get_breast_cbe.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","title":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","text":"get_breast_cbe() retrieves data CBE conducted within specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_breast_cbe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","text":"","code":"get_breast_cbe(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_breast_cbe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_breast_cbe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","text":"tibble containing data CBE conducted following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (25-34, 35-39, 40-55, 56-74, 75+). category2  - Additional category available. element    - data element. value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_breast_cbe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Data for Clinical Breast Examinations (CBE) Conducted — get_breast_cbe","text":"","code":"# Download data from February 2023 to current date cbe_data <- get_breast_cbe(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused cbe_data #> Error in eval(expr, envir, enclos): object 'cbe_data' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_breast_mammogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","title":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","text":"get_breast_mammogram() retrieves data mammograms conducted within specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_breast_mammogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","text":"","code":"get_breast_mammogram(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_breast_mammogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_breast_mammogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","text":"tibble containing data mammograms conducted following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (25-34, 35-39, 40-55, 56-74, 75+). category2  - Additional category available. element    - data element. value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_breast_mammogram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Data for Mammograms Conducted — get_breast_mammogram","text":"","code":"# Download data from February 2023 to current date mammogram_data <- get_breast_mammogram(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused mammogram_data #> Error in eval(expr, envir, enclos): object 'mammogram_data' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_category_options_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Category Options Metadata — get_category_options_metadata","title":"Get Category Options Metadata — get_category_options_metadata","text":"get_category_options_metadata() fetches category options KHIS API","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_category_options_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Category Options Metadata — get_category_options_metadata","text":"","code":"get_category_options_metadata(...)"},{"path":"https://cancerscreening.damurka.com/reference/get_category_options_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Category Options Metadata — get_category_options_metadata","text":"... Options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_category_options_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Category Options Metadata — get_category_options_metadata","text":"tibble containing following columns: category_id  - unique identifier category option. category     - name category option.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_category_options_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Category Options Metadata — get_category_options_metadata","text":"","code":"# Fetch the category option metadata categories <- get_category_options_metadata() #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 114 ms: Connection refused categories #> Error in eval(expr, envir, enclos): object 'categories' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_hiv_screened.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","title":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","text":"get_cervical_hiv_screened() retrieves cervical cancer screening positivity data HIV positive women specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_hiv_screened.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","text":"","code":"get_cervical_hiv_screened(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_hiv_screened.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_hiv_screened.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","text":"tibble containing cervical cancer screening data HIV positive women following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (<25, 25-49, 50+). category2  - Additional category available. element    - data element (HPV, VIA Pap Smear). source     - source report (MOH 711 MOH 745). value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_hiv_screened.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Cervical Cancer Screening Data on HIV Positive Women — get_cervical_hiv_screened","text":"","code":"# Download data from February 2023 to current date screened <- get_cervical_hiv_screened(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused screened #> Error in eval(expr, envir, enclos): object 'screened' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_positive.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","title":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","text":"get_cervical_positive() retrieves cervical cancer screening data positive results specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_positive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","text":"","code":"get_cervical_positive(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_positive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_positive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","text":"tibble containing cervical cancer screening data positive results following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (<25, 25-49, 50+). category2  - Additional category available. element    - data element (HPV, VIA Pap Smear). source     - source report (MOH 711 MOH 745). value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_positive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Cervical Cancer Screening Data with Positive Results — get_cervical_positive","text":"","code":"# Download data from February 2023 to current date positive <- get_cervical_positive(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused positive #> Error in eval(expr, envir, enclos): object 'positive' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_screened.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","title":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","text":"get_cervical_screened() retrieves cervical cancer screening data specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_screened.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","text":"","code":"get_cervical_screened(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_screened.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_screened.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","text":"tibble containing cervical cancer screening data following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (<25, 25-49, 50+). category2  - Additional category available. element    - data element (HPV, VIA Pap Smear). source     - source report (MOH 711 MOH 745). value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_screened.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Cervical Cancer Screening Data — get_cervical_screened","text":"","code":"# Download data from February 2023 to current date screened <- get_cervical_screened(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused screened #> Error in eval(expr, envir, enclos): object 'screened' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_treated.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","title":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","text":"get_cervical_treated() retrieves cervical cancer precancerous treatment data specified period KHIS API server using get_analytics().","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_treated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","text":"","code":"get_cervical_treated(   start_date,   end_date = NULL,   level = c(\"kenya\", \"county\", \"subcounty\", \"ward\", \"facility\"),   organisations = NULL,   categories = NULL,   elements = NULL,   ... )"},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_treated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","text":"start_date start date retrieve data. required format YYYY-MM-dd. end_date ending date data retrieval (default current date). level desired data granularity: \"kenya\" (default), \"county\", \"subcounty\", \"ward\", \"facility\". organisations list organization units data. NULL, downloaded using get_organisation_units_metadata(). categories list categories include. NULL, downloaded using get_category_options_metadata(). elements list data elements include. NULL, downloaded using get_data_elements_metadata(). ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_treated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","text":"tibble containing cervical cancer precancerous treatment data following columns: kenya      - Optional level Kenya. county     - Name county. Optional level county, subcounty, ward facility. subcounty  - Name subcounty. Optional level subcounty, ward facility. ward       - Name ward. Optional level ward facility. facility   - Name health facility. Optional level facility. period     - month year data. fiscal_year- financial year report(July-June Cycle). year       - calendar year report. month      - month name report. category   - age group category report (<25, 25-49, 50+). category2  - Additional category available. element    - data element (HPV, VIA Pap Smear). source     - source report (MOH 711 MOH 745). value      - number reported.","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/get_cervical_treated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves Cervical Cancer Precancerous Treatment Data — get_cervical_treated","text":"","code":"# Download data from February 2023 to current date treated <- get_cervical_treated(start_date = '2023-02-01') #> ℹ Downloading organisation units #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused treated #> Error in eval(expr, envir, enclos): object 'treated' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_data_elements_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Data Elements Metadata — get_data_elements_metadata","title":"Get Data Elements Metadata — get_data_elements_metadata","text":"get_data_elements_metadata() fetches data elements metadata KHIS API server, including IDs names.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_data_elements_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Data Elements Metadata — get_data_elements_metadata","text":"","code":"get_data_elements_metadata(element_ids = NULL, ...)"},{"path":"https://cancerscreening.damurka.com/reference/get_data_elements_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Data Elements Metadata — get_data_elements_metadata","text":"element_ids vector specific data element IDs retrieve. NULL, data elements retrieved. ... options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_data_elements_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Data Elements Metadata — get_data_elements_metadata","text":"tibble containing following columns: element_id - unique identifier data element. element    - name data element.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_data_elements_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Data Elements Metadata — get_data_elements_metadata","text":"","code":"# Fetch the data element metadata for particular element id elements <- get_data_elements_metadata(element_ids = c('htFuvGJRW1X')) #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused elements #> Error in eval(expr, envir, enclos): object 'elements' not found  # Fetch all the data elements elements <- get_data_elements_metadata() #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused elements #> Error in eval(expr, envir, enclos): object 'elements' not found"},{"path":"https://cancerscreening.damurka.com/reference/get_filtered_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters the Population — get_filtered_population","title":"Filters the Population — get_filtered_population","text":"get_filtered_population() filters population based age level projects population base year provided","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_filtered_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters the Population — get_filtered_population","text":"","code":"get_filtered_population(   year,   min_age,   max_age,   modifier = 1,   level = c(\"kenya\", \"county\", \"subcounty\"),   pop_sex = c(\"female\", \"male\", \"both\"),   rate = 0.022 )"},{"path":"https://cancerscreening.damurka.com/reference/get_filtered_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters the Population — get_filtered_population","text":"year year project population min_age minimum age include filtered data max_age maximum age include filtered data modifier multiplier affect population projection. Default 1 level desired level organization unit hierarchy retrieve data : \"kenya\", \"county\" \"subcounty\". pop_sex desired population sex: \"male\", \"female\" (default), \"\" rate population growth","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_filtered_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters the Population — get_filtered_population","text":"tibble containing target population","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_filtered_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters the Population — get_filtered_population","text":"","code":"# Get the female population in 2022 aged 25-49 years filtered_population <- get_filtered_population(2022, 25, 49, pop_sex = 'female') filtered_population #> # A tibble: 1 × 1 #>     target #>      <dbl> #> 1 7294076.  # Get 5% male population in 2022 aged 40-75 years filtered_population <- get_filtered_population(2022, 40, 75, modifier = 0.05, pop_sex = 'male') filtered_population #> # A tibble: 1 × 1 #>    target #>     <dbl> #> 1 221010."},{"path":"https://cancerscreening.damurka.com/reference/get_organisation_units_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Organisation Units Metadata — get_organisation_units_metadata","title":"Get Organisation Units Metadata — get_organisation_units_metadata","text":"get_organisation_units_metadata() fetches organisation units metadata KHIS API server.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_organisation_units_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Organisation Units Metadata — get_organisation_units_metadata","text":"","code":"get_organisation_units_metadata(...)"},{"path":"https://cancerscreening.damurka.com/reference/get_organisation_units_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Organisation Units Metadata — get_organisation_units_metadata","text":"... Options can passed onto KHIS API.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_organisation_units_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Organisation Units Metadata — get_organisation_units_metadata","text":"tibble containing following columns: facility_id   - Organisation identifier uniquely identifies health facility. ward_id       - Organisation identifier uniquely identifies ward. subcounty_id  - Organisation identifier uniquely identifies subcounty. county_id     - Organisation identifier uniquely identifies county. facility      - Name health facility. county        - Name county. subcounty     - Name subcounty. ward          - Name ward.","code":""},{"path":"https://cancerscreening.damurka.com/reference/get_organisation_units_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Organisation Units Metadata — get_organisation_units_metadata","text":"","code":"# Fetch all the organisation units metadata organisations <- get_organisation_units_metadata() #> Error in req_perform(., verbosity = verbosity): Failed to perform HTTP request. #> Caused by error in `curl::curl_fetch_memory()`: #> ! Failed to connect to hiskenya.org port 443 after 113 ms: Connection refused organisations #> Error in eval(expr, envir, enclos): object 'organisations' not found"},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the KHIS Credentials — khis_cred","title":"Sets the KHIS Credentials — khis_cred","text":"Sets KHIS Credentials","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the KHIS Credentials — khis_cred","text":"","code":"khis_cred(config_path = NULL, username = NULL, password = NULL)"},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the KHIS Credentials — khis_cred","text":"config_path optional parameters contains path configuration file username password. username KHIS username. Can optional config_path already provided password KHIS password. Can optional config_path already provided.","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the KHIS Credentials — khis_cred","text":"return value","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets the KHIS Credentials — khis_cred","text":"credentials can provided using configuration file (secure) providing username password arguments. conf_path considered secure since credentials appear code.","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets the KHIS Credentials — khis_cred","text":"","code":"# Load username and password khis_cred(username = 'khis_username', password = 'PASSWORD') #> ℹ The credentials have been set."},{"path":"https://cancerscreening.damurka.com/reference/khis_cred_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the Credentials from Memory — khis_cred_clear","title":"Clear the Credentials from Memory — khis_cred_clear","text":"Clear Credentials Memory","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the Credentials from Memory — khis_cred_clear","text":"","code":"khis_cred_clear()"},{"path":"https://cancerscreening.damurka.com/reference/khis_cred_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear the Credentials from Memory — khis_cred_clear","text":"return value","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_cred_clear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear the Credentials from Memory — khis_cred_clear","text":"","code":"khis_cred_clear()"},{"path":"https://cancerscreening.damurka.com/reference/khis_has_cred.html","id":null,"dir":"Reference","previous_headings":"","what":"Are There Credentials on Hand? — khis_has_cred","title":"Are There Credentials on Hand? — khis_has_cred","text":"Credentials Hand?","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_has_cred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are There Credentials on Hand? — khis_has_cred","text":"","code":"khis_has_cred()"},{"path":"https://cancerscreening.damurka.com/reference/khis_has_cred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are There Credentials on Hand? — khis_has_cred","text":"boolean value indicating credentials available","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/khis_has_cred.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are There Credentials on Hand? — khis_has_cred","text":"","code":"# Set the credentials khis_cred(username = 'KHIS username', password = 'KHIS password') #> ℹ The credentials have been set.  # Check if credentials available. Expect TRUE khis_has_cred() #> [1] TRUE  # Clear credentials khis_cred_clear()  # Check if credentials available. Expect FALSE khis_has_cred() #> [1] FALSE"},{"path":"https://cancerscreening.damurka.com/reference/khis_username.html","id":null,"dir":"Reference","previous_headings":"","what":"Produces the Configured Username — khis_username","title":"Produces the Configured Username — khis_username","text":"Produces Configured Username","code":""},{"path":"https://cancerscreening.damurka.com/reference/khis_username.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produces the Configured Username — khis_username","text":"","code":"khis_username()"},{"path":"https://cancerscreening.damurka.com/reference/khis_username.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produces the Configured Username — khis_username","text":"username user credentials","code":""},{"path":[]},{"path":"https://cancerscreening.damurka.com/reference/khis_username.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produces the Configured Username — khis_username","text":"","code":"# Set the credentials khis_cred(username = 'KHIS username', password = 'KHIS password') #> ℹ The credentials have been set.  # View the username expect 'KHIS username' khis_username() #> [1] \"KHIS username\"  # Clear credentials khis_cred_clear()  # View the username expect 'NULL' khis_username() #> NULL"},{"path":"https://cancerscreening.damurka.com/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://cancerscreening.damurka.com/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Screening Target Populations — target_population","title":"Screening Target Populations — target_population","text":"functions subsets Kenyan population desirable screening population.","code":""},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Screening Target Populations — target_population","text":"","code":"get_cervical_target_population(year, level = c(\"kenya\", \"county\", \"subcounty\"))  get_breast_cbe_target_population(   year,   level = c(\"kenya\", \"county\", \"subcounty\") )  get_breast_mammogram_target_population(   year,   level = c(\"kenya\", \"county\", \"subcounty\") )"},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Screening Target Populations — target_population","text":"year Year estimate population. level desired level organization unit hierarchy retrieve data : \"kenya\" (default) , \"county\" \"subcounty\".","code":""},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Screening Target Populations — target_population","text":"tibble containing target screening population county     - name county. Optional level county subcounty subcounty  - name county. Optional level subcounty target     - number screened tibble containing target screening population tibble containing target screening population","code":""},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Screening Target Populations — target_population","text":"get_cervical_target_population() subsets target population cervical cancer screening: females aged 25 years 50 years get_breast_cbe_target_population() subsets target population clinical breast examination: females aged 25 years 74 years get_breast_mammogram_target_population() subsets target population breast cancer screening mammography: females aged 40 years 74 years target populations guided Kenya National Cancer Screening Guidelines 2018. population projection counties national level calculated based population growth 2.2% obtained Kenya National Bureau Statistics. annual targets follows guidance screening guidelines cervical cancer also guided publication 'Planning implementing cervical cancer prevention programs: manual managers.'","code":""},{"path":"https://cancerscreening.damurka.com/reference/target_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Screening Target Populations — target_population","text":"","code":"# Get the country projection for cervical cancer screening for the year 2024 target_population <- get_cervical_target_population(2024) target_population #> # A tibble: 1 × 1 #>     target #>      <dbl> #> 1 1112735.  # Get the projection for cervical cancer screening for 2022 by county target_population <- get_cervical_target_population(2022, level = 'county') target_population #> # A tibble: 47 × 2 #>    county          target #>    <fct>            <dbl> #>  1 Baringo         12705. #>  2 Bomet           18680. #>  3 Bungoma         33151. #>  4 Busia           18221. #>  5 Elgeyo Marakwet  9093. #>  6 Embu            15342. #>  7 Garissa         15238. #>  8 Homa Bay        23316. #>  9 Isiolo           5062. #> 10 Kajiado         29055. #> # ℹ 37 more rows  # Get the projection for CBE for 2022 by county target_population <- get_breast_cbe_target_population(2022, level = 'county') target_population #> # A tibble: 47 × 2 #>    county          target #>    <fct>            <dbl> #>  1 Baringo          9206. #>  2 Bomet           13021. #>  3 Bungoma         24429. #>  4 Busia           13914. #>  5 Elgeyo Marakwet  6599. #>  6 Embu            11919. #>  7 Garissa          9730. #>  8 Homa Bay        17383. #>  9 Isiolo           3476. #> 10 Kajiado         18656. #> # ℹ 37 more rows  # Get the country projection of women to perform mammogram for the year 2024 target_population <- get_breast_mammogram_target_population(2024) target_population #> # A tibble: 1 × 1 #>    target #>     <dbl> #> 1 697245."},{"path":"https://cancerscreening.damurka.com/news/index.html","id":"cancerscreening-101","dir":"Changelog","previous_headings":"","what":"cancerscreening 1.0.1","title":"cancerscreening 1.0.1","text":"Initial CRAN submission.","code":""}]
